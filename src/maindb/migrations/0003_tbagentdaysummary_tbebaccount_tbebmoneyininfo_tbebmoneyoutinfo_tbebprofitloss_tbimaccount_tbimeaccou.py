# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2020-05-12 14:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import helpers.director.model_func.cus_fields.multichoice
import helpers.director.model_func.cus_fields.richtext
import maindb.cus_models_fields


class Migration(migrations.Migration):

    dependencies = [
        ('maindb', '0002_auto_20191204_2010'),
    ]

    operations = [
        migrations.CreateModel(
            name='TbAgentdaysummary',
            fields=[
                ('tid', models.BigAutoField(db_column='TID', primary_key=True, serialize=False)),
                ('accountid', models.IntegerField(db_column='AccountID')),
                ('sumtype', models.IntegerField(db_column='SumType')),
                ('sumlostamount', models.DecimalField(db_column='SumLostAmount', decimal_places=4, default=0, max_digits=18)),
                ('sumamount', models.DecimalField(db_column='SumAmount', decimal_places=4, default=0, max_digits=18)),
                ('sumdate', models.DateField(db_column='SumDate', max_length=10)),
                ('createtime', models.DateTimeField(blank=True, db_column='CreateTime', null=True)),
                ('sumbonusamount', models.DecimalField(db_column='SumBonusAmount', decimal_places=4, default=0, max_digits=18)),
                ('sumturnover', models.DecimalField(db_column='SumTurnover', decimal_places=4, default=0, max_digits=18)),
                ('sumexpend', models.DecimalField(db_column='SumExpend', decimal_places=4, default=0, max_digits=18)),
                ('levelpoints', models.DecimalField(db_column='LevelPoints', decimal_places=4, default=0, max_digits=18)),
                ('sumpieaward', models.DecimalField(db_column='SumPieAward', decimal_places=4, default=0, max_digits=18)),
                ('gameid', models.IntegerField(db_column='GameId')),
            ],
            options={
                'db_table': 'TB_AgentDaySummary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbEbaccount',
            fields=[
                ('account', models.ForeignKey(db_column='AccountId', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='maindb.TbAccount', verbose_name='账号')),
                ('username', models.CharField(db_column='UserName', max_length=50, verbose_name='用户名')),
                ('transferin', models.DecimalField(db_column='TransferIn', decimal_places=4, max_digits=18, verbose_name='转入')),
                ('transferout', models.DecimalField(db_column='TransferOut', decimal_places=4, max_digits=18, verbose_name='转出')),
                ('winorloss', models.DecimalField(db_column='WinOrLoss', decimal_places=4, max_digits=18, verbose_name='亏盈')),
                ('bonusrate', models.DecimalField(db_column='BonusRate', decimal_places=4, max_digits=18, verbose_name='返点率')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='总反水')),
                ('availablescores', models.DecimalField(db_column='AvailableScores', decimal_places=4, max_digits=18, verbose_name='余额')),
                ('createtime', models.DateTimeField(db_column='CreateTime', verbose_name='创建时间')),
                ('fundswitch', models.BooleanField(db_column='FundSwitch', verbose_name='资金开关')),
            ],
            options={
                'db_table': 'TB_EbAccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbEbmoneyininfo',
            fields=[
                ('moneyinid', models.AutoField(db_column='MoneyInID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待转入'), (1, '正在转入'), (2, '转入完成'), (3, '转入失败'), (4, '转入失败,已退款')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_EbMoneyInInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbEbmoneyoutinfo',
            fields=[
                ('moneyoutid', models.AutoField(db_column='MoneyOutID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待处理'), (1, '正在收回'), (2, '收回完成'), (4, '收回失败')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_EbMoneyOutInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbEbprofitloss',
            fields=[
                ('profitlossid', models.AutoField(db_column='ProfitLossID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('profitlosstime', models.DateTimeField(blank=True, db_column='ProfitLossTime', null=True, verbose_name='游戏时间')),
                ('profitlosstype', models.CharField(blank=True, db_column='ProfitLossType', max_length=50, null=True)),
                ('profitlossmoney', models.DecimalField(blank=True, db_column='ProfitLossMoney', decimal_places=4, max_digits=18, null=True, verbose_name='投注额')),
                ('winmoney', models.DecimalField(blank=True, db_column='WinMoney', decimal_places=4, max_digits=18, null=True, verbose_name='亏盈')),
                ('prizemoney', models.DecimalField(blank=True, db_column='PrizeMoney', decimal_places=4, max_digits=18, null=True, verbose_name='派奖额')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=500, null=True, verbose_name='描述')),
                ('playid', models.CharField(blank=True, db_column='PlayID', max_length=50, null=True, verbose_name='游戏ID')),
                ('gametype', models.CharField(blank=True, db_column='GameType', max_length=50, null=True, verbose_name='游戏类型')),
                ('refid', models.IntegerField(blank=True, db_column='RefID', null=True)),
                ('savetime', models.DateTimeField(blank=True, db_column='SaveTime', null=True, verbose_name='数据保存时间')),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('bettime', models.DateTimeField(blank=True, db_column='BetTime', null=True)),
                ('iswin', models.IntegerField(blank=True, db_column='IsWin', null=True, verbose_name='赢')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='返点金额')),
                ('turnover', models.DecimalField(db_column='Turnover', decimal_places=0, max_digits=18, verbose_name='流水')),
            ],
            options={
                'db_table': 'TB_EbProfitLoss',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbImaccount',
            fields=[
                ('account', models.ForeignKey(db_column='AccountId', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='maindb.TbAccount', verbose_name='账号')),
                ('username', models.CharField(db_column='UserName', max_length=50, verbose_name='IM体育用户名')),
                ('transferin', models.DecimalField(db_column='TransferIn', decimal_places=4, max_digits=18, verbose_name='转入')),
                ('transferout', models.DecimalField(db_column='TransferOut', decimal_places=4, max_digits=18, verbose_name='转出')),
                ('winorloss', models.DecimalField(db_column='WinOrLoss', decimal_places=4, max_digits=18, verbose_name='亏盈')),
                ('bonusrate', models.DecimalField(db_column='BonusRate', decimal_places=4, max_digits=18, verbose_name='返点率')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='总反水')),
                ('availablescores', models.DecimalField(db_column='AvailableScores', decimal_places=4, max_digits=18, verbose_name='余额')),
                ('createtime', models.DateTimeField(db_column='CreateTime', verbose_name='创建时间')),
                ('fundswitch', models.BooleanField(db_column='FundSwitch', verbose_name='资金开关')),
            ],
            options={
                'db_table': 'TB_IMAccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbImeaccount',
            fields=[
                ('account', models.ForeignKey(db_column='AccountId', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='maindb.TbAccount', verbose_name='账号')),
                ('username', models.CharField(db_column='UserName', max_length=50, verbose_name='IM电竞用户名')),
                ('transferin', models.DecimalField(db_column='TransferIn', decimal_places=4, max_digits=18, verbose_name='转入')),
                ('transferout', models.DecimalField(db_column='TransferOut', decimal_places=4, max_digits=18, verbose_name='转出')),
                ('winorloss', models.DecimalField(db_column='WinOrLoss', decimal_places=4, max_digits=18, verbose_name='亏盈')),
                ('bonusrate', models.DecimalField(db_column='BonusRate', decimal_places=4, max_digits=18, verbose_name='返点率')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='总反水')),
                ('availablescores', models.DecimalField(db_column='AvailableScores', decimal_places=4, max_digits=18, verbose_name='余额')),
                ('createtime', models.DateTimeField(db_column='CreateTime', verbose_name='创建时间')),
                ('fundswitch', models.BooleanField(db_column='FundSwitch', verbose_name='资金开关')),
            ],
            options={
                'db_table': 'TB_IMEAccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbImmoneyininfo',
            fields=[
                ('moneyinid', models.AutoField(db_column='MoneyInID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=2, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待转入'), (1, '正在转入'), (2, '转入完成'), (3, '转入失败'), (4, '转入失败,已退款')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
                ('tsamp', models.TextField(blank=True, db_column='Tsamp', null=True)),
                ('productid', models.IntegerField(choices=[(301, 'IM体育'), (401, 'IM电竞')], db_column='ProductId', verbose_name='类型')),
            ],
            options={
                'db_table': 'TB_IMMoneyInInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbImmoneyoutinfo',
            fields=[
                ('moneyoutid', models.AutoField(db_column='MoneyOutID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=2, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待处理'), (1, '正在收回'), (2, '收回完成'), (4, '收回失败')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
                ('productid', models.IntegerField(choices=[(301, 'IM体育'), (401, 'IM电竞')], db_column='ProductId', verbose_name='类型')),
            ],
            options={
                'db_table': 'TB_IMMoneyOutInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbImprofitloss',
            fields=[
                ('profitlossid', models.AutoField(db_column='ProfitLossID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('profitlosstime', models.DateTimeField(blank=True, db_column='ProfitLossTime', null=True, verbose_name='游戏时间')),
                ('profitlosstype', models.CharField(blank=True, db_column='ProfitLossType', max_length=50, null=True)),
                ('profitlossmoney', models.DecimalField(blank=True, db_column='ProfitLossMoney', decimal_places=4, max_digits=18, null=True, verbose_name='投注额')),
                ('winmoney', models.DecimalField(blank=True, db_column='WinMoney', decimal_places=4, max_digits=18, null=True, verbose_name='亏盈')),
                ('prizemoney', models.DecimalField(blank=True, db_column='PrizeMoney', decimal_places=4, max_digits=18, null=True, verbose_name='派奖额')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=500, null=True, verbose_name='描述')),
                ('playid', models.CharField(blank=True, db_column='PlayID', max_length=50, null=True, verbose_name='游戏ID')),
                ('gametype', models.CharField(blank=True, db_column='GameType', max_length=50, null=True, verbose_name='游戏类型')),
                ('refid', models.IntegerField(blank=True, db_column='RefID', null=True)),
                ('savetime', models.DateTimeField(blank=True, db_column='SaveTime', null=True, verbose_name='数据保存时间')),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('bettime', models.DateTimeField(blank=True, db_column='BetTime', null=True)),
                ('iswin', models.IntegerField(blank=True, db_column='IsWin', null=True, verbose_name='赢')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='返点金额')),
                ('turnover', models.DecimalField(db_column='Turnover', decimal_places=0, max_digits=18, verbose_name='流水')),
                ('productid', models.IntegerField(choices=[(301, 'IM体育'), (401, 'IM电竞')], db_column='ProductId', verbose_name='类型')),
            ],
            options={
                'db_table': 'TB_IMProfitLoss',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbLcityaccount',
            fields=[
                ('accountid', models.ForeignKey(db_column='AccountId', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='maindb.TbAccount', verbose_name='账号')),
                ('username', models.CharField(db_column='UserName', max_length=50, verbose_name='龙城用户名')),
                ('transferin', models.DecimalField(db_column='TransferIn', decimal_places=4, max_digits=18, verbose_name='转入')),
                ('transferout', models.DecimalField(db_column='TransferOut', decimal_places=4, max_digits=18, verbose_name='转出')),
                ('winorloss', models.DecimalField(db_column='WinOrLoss', decimal_places=4, max_digits=18, verbose_name='亏盈')),
                ('bonusrate', models.DecimalField(db_column='BonusRate', decimal_places=4, max_digits=18, verbose_name='反点率')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='总反水')),
                ('availablescores', models.DecimalField(db_column='AvailableScores', decimal_places=4, max_digits=18, verbose_name='余额')),
                ('createtime', models.DateTimeField(db_column='CreateTime', verbose_name='创建时间')),
                ('fundswitch', models.BooleanField(db_column='FundSwitch', verbose_name='资金开关')),
            ],
            options={
                'db_table': 'TB_LCityAccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbLcitymoneyininfo',
            fields=[
                ('moneyinid', models.AutoField(db_column='MoneyInID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='龙城用户名')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待转入'), (1, '正在转入'), (2, '转入完成'), (3, '转入失败'), (4, '转入失败,已退款')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
                ('tsamp', models.TextField(blank=True, db_column='Tsamp', null=True)),
            ],
            options={
                'db_table': 'TB_LCityMoneyInInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbLcitymoneyoutinfo',
            fields=[
                ('moneyoutid', models.AutoField(db_column='MoneyOutID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='龙城用户名')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(auto_now_add=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待处理'), (1, '正在收回'), (2, '收回完成'), (4, '收回失败')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_LCityMoneyOutInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbLcityprofitloss',
            fields=[
                ('profitlossid', models.AutoField(db_column='ProfitLossID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('profitlosstime', models.DateTimeField(blank=True, db_column='ProfitLossTime', null=True, verbose_name='游戏时间')),
                ('profitlosstype', models.CharField(blank=True, db_column='ProfitLossType', max_length=50, null=True)),
                ('profitlossmoney', models.DecimalField(blank=True, db_column='ProfitLossMoney', decimal_places=4, max_digits=18, null=True, verbose_name='投注额')),
                ('winmoney', models.DecimalField(blank=True, db_column='WinMoney', decimal_places=4, max_digits=18, null=True, verbose_name='亏盈')),
                ('prizemoney', models.DecimalField(blank=True, db_column='PrizeMoney', decimal_places=4, max_digits=18, null=True, verbose_name='派奖额')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=500, null=True, verbose_name='描述')),
                ('playid', models.CharField(blank=True, db_column='PlayID', max_length=50, null=True, verbose_name='游戏ID')),
                ('gametype', models.CharField(blank=True, db_column='GameType', max_length=50, null=True, verbose_name='游戏类型')),
                ('refid', models.IntegerField(blank=True, db_column='RefID', null=True, verbose_name='')),
                ('savetime', models.DateTimeField(blank=True, db_column='SaveTime', null=True, verbose_name='数据保存时间')),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('bettime', models.DateTimeField(blank=True, db_column='BetTime', null=True)),
                ('iswin', models.IntegerField(blank=True, db_column='IsWin', null=True, verbose_name='赢')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='龙城用户名')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='返点金额')),
                ('turnover', models.DecimalField(db_column='Turnover', decimal_places=0, max_digits=18, verbose_name='流水')),
            ],
            options={
                'db_table': 'TB_LCityProfitLoss',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbManualsettlemsg',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID', verbose_name='比赛ID')),
                ('settlemsg', models.TextField(db_column='SettleMsg', verbose_name='结算内容')),
                ('status', models.IntegerField(choices=[(0, '编辑中'), (1, '审核中')], db_column='Status', default=0, verbose_name='状态')),
            ],
            options={
                'db_table': 'TB_ManualSettleMsg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbMessage',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255, verbose_name='标题')),
                ('abstract', models.CharField(blank=True, db_column='Abstract', max_length=512, null=True, verbose_name='摘要')),
                ('sender', models.CharField(db_column='Sender', max_length=64, verbose_name='创建者')),
                ('sendway', models.IntegerField(choices=[(0, '立即推送'), (1, '定时推送')], db_column='SendWay', default=0, verbose_name='发送方式')),
                ('sendtime', models.DateTimeField(blank=True, db_column='SendTime', null=True, verbose_name='预计发送时间')),
                ('userids', models.TextField(blank=True, db_column='UserIds', help_text='用分号分割，例如1234;1235;1236', null=True, verbose_name='玩家id')),
                ('usergroupids', helpers.director.model_func.cus_fields.multichoice.MultiChoiceTextField(blank=True, db_column='UserGroupIds', null=True, verbose_name='用户组别')),
                ('vipgroupids', helpers.director.model_func.cus_fields.multichoice.MultiChoiceTextField(blank=True, db_column='VipGroupIds', null=True, verbose_name='VIP组别')),
                ('createtime', models.DateTimeField(auto_now_add=True, db_column='CreateTime', verbose_name='创建时间')),
                ('issent', models.BooleanField(db_column='IsSent', verbose_name='发送')),
                ('status', models.IntegerField(choices=[(0, '无效'), (1, '有效')], db_column='Status', default=1, verbose_name='状态')),
                ('content', helpers.director.model_func.cus_fields.richtext.RichtextField(db_column='Content', verbose_name='内容')),
                ('receivertype', models.IntegerField(blank=True, db_column='ReceiverType', default=0)),
            ],
            options={
                'db_table': 'TB_Message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbMessageReceiver',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('messageid', models.IntegerField(db_column='MessageId')),
                ('receiverid', models.IntegerField(db_column='ReceiverId')),
                ('receivertype', models.IntegerField(choices=[(0, '全部'), (1, '用户ID'), (2, '用户组ID'), (3, '会员组ID')], db_column='ReceiverType')),
            ],
            options={
                'db_table': 'TB_Message_Receiver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbMessagetype',
            fields=[
                ('id', models.IntegerField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('needread', models.BooleanField(db_column='NeedRead')),
                ('sort', models.IntegerField(db_column='Sort')),
            ],
            options={
                'db_table': 'TB_MessageType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProductContactUser',
            fields=[
                ('accountid', models.ForeignKey(db_column='AccountId', db_constraint=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='maindb.TbAccount')),
                ('userrealname', models.CharField(db_column='UserRealName', max_length=30)),
                ('phone', models.CharField(db_column='Phone', max_length=11)),
                ('province', models.CharField(blank=True, db_column='Province', max_length=32, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=32, null=True)),
                ('county', models.CharField(blank=True, db_column='County', max_length=32, null=True)),
                ('address', models.CharField(db_column='Address', max_length=128)),
            ],
            options={
                'db_table': 'TB_Product_Contact_User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbPtaccount',
            fields=[
                ('account', models.ForeignKey(db_column='AccountId', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='maindb.TbAccount', verbose_name='账号')),
                ('username', models.CharField(db_column='UserName', max_length=50, verbose_name='用户名')),
                ('transferin', models.DecimalField(db_column='TransferIn', decimal_places=4, max_digits=18, verbose_name='转入')),
                ('transferout', models.DecimalField(db_column='TransferOut', decimal_places=4, max_digits=18, verbose_name='转出')),
                ('winorloss', models.DecimalField(db_column='WinOrLoss', decimal_places=4, max_digits=18, verbose_name='亏盈')),
                ('bonusrate', models.DecimalField(db_column='BonusRate', decimal_places=4, max_digits=18, verbose_name='返点率')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='总反水')),
                ('availablescores', models.DecimalField(db_column='AvailableScores', decimal_places=4, max_digits=18, verbose_name='余额')),
                ('createtime', models.DateTimeField(db_column='CreateTime', verbose_name='创建时间')),
                ('fundswitch', models.BooleanField(db_column='FundSwitch', verbose_name='资金开关')),
            ],
            options={
                'db_table': 'TB_PtAccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbPtmoneyininfo',
            fields=[
                ('moneyinid', models.AutoField(db_column='MoneyInID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待转入'), (1, '正在转入'), (2, '转入完成'), (3, '转入失败'), (4, '转入失败,已退款')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_PtMoneyInInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbPtmoneyoutinfo',
            fields=[
                ('moneyoutid', models.AutoField(db_column='MoneyOutID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待处理'), (1, '正在收回'), (2, '收回完成'), (4, '收回失败')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_PtMoneyOutInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbPtprofitloss',
            fields=[
                ('profitlossid', models.AutoField(db_column='ProfitLossID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('profitlosstime', models.DateTimeField(blank=True, db_column='ProfitLossTime', null=True, verbose_name='游戏时间')),
                ('profitlosstype', models.CharField(blank=True, db_column='ProfitLossType', max_length=50, null=True)),
                ('profitlossmoney', models.DecimalField(blank=True, db_column='ProfitLossMoney', decimal_places=4, max_digits=18, null=True, verbose_name='投注额')),
                ('winmoney', models.DecimalField(blank=True, db_column='WinMoney', decimal_places=4, max_digits=18, null=True, verbose_name='亏盈')),
                ('prizemoney', models.DecimalField(blank=True, db_column='PrizeMoney', decimal_places=4, max_digits=18, null=True, verbose_name='派奖额')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=500, null=True, verbose_name='描述')),
                ('playid', models.CharField(blank=True, db_column='PlayID', max_length=50, null=True, verbose_name='游戏ID')),
                ('gametype', models.CharField(blank=True, db_column='GameType', max_length=50, null=True, verbose_name='游戏类型')),
                ('refid', models.IntegerField(blank=True, db_column='RefID', null=True)),
                ('savetime', models.DateTimeField(blank=True, db_column='SaveTime', null=True, verbose_name='数据保存时间')),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('bettime', models.DateTimeField(blank=True, db_column='BetTime', null=True)),
                ('iswin', models.IntegerField(blank=True, db_column='IsWin', null=True, verbose_name='赢')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='返点金额')),
                ('turnover', models.DecimalField(db_column='Turnover', decimal_places=0, max_digits=18, verbose_name='流水')),
            ],
            options={
                'db_table': 'TB_PtProfitLoss',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbRgaccount',
            fields=[
                ('account', models.ForeignKey(db_column='AccountId', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='maindb.TbAccount', verbose_name='账号')),
                ('username', models.CharField(db_column='UserName', max_length=50, verbose_name='用户名')),
                ('transferin', models.DecimalField(db_column='TransferIn', decimal_places=4, max_digits=18, verbose_name='转入')),
                ('transferout', models.DecimalField(db_column='TransferOut', decimal_places=4, max_digits=18, verbose_name='转出')),
                ('winorloss', models.DecimalField(db_column='WinOrLoss', decimal_places=4, max_digits=18, verbose_name='亏盈')),
                ('bonusrate', models.DecimalField(db_column='BonusRate', decimal_places=4, max_digits=18, verbose_name='返点率')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='总反水')),
                ('availablescores', models.DecimalField(db_column='AvailableScores', decimal_places=4, max_digits=18, verbose_name='余额')),
                ('createtime', models.DateTimeField(db_column='CreateTime', verbose_name='创建时间')),
                ('fundswitch', models.BooleanField(db_column='FundSwitch', verbose_name='资金开关')),
            ],
            options={
                'db_table': 'TB_RgAccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbRgmoneyininfo',
            fields=[
                ('moneyinid', models.AutoField(db_column='MoneyInID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待转入'), (1, '正在转入'), (2, '转入完成'), (3, '转入失败'), (4, '转入失败,已退款')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_RgMoneyInInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbRgmoneyoutinfo',
            fields=[
                ('moneyoutid', models.AutoField(db_column='MoneyOutID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待处理'), (1, '正在收回'), (2, '收回完成'), (4, '收回失败')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_RgMoneyOutInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbRgprofitloss',
            fields=[
                ('profitlossid', models.AutoField(db_column='ProfitLossID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('profitlosstime', models.DateTimeField(blank=True, db_column='ProfitLossTime', null=True, verbose_name='游戏时间')),
                ('profitlosstype', models.CharField(blank=True, db_column='ProfitLossType', max_length=50, null=True)),
                ('profitlossmoney', models.DecimalField(blank=True, db_column='ProfitLossMoney', decimal_places=4, max_digits=18, null=True, verbose_name='投注额')),
                ('winmoney', models.DecimalField(blank=True, db_column='WinMoney', decimal_places=4, max_digits=18, null=True, verbose_name='亏盈')),
                ('prizemoney', models.DecimalField(blank=True, db_column='PrizeMoney', decimal_places=4, max_digits=18, null=True, verbose_name='派奖额')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=500, null=True, verbose_name='描述')),
                ('playid', models.CharField(blank=True, db_column='PlayID', max_length=50, null=True, verbose_name='游戏ID')),
                ('gametype', models.CharField(blank=True, db_column='GameType', max_length=50, null=True, verbose_name='游戏类型')),
                ('refid', models.IntegerField(blank=True, db_column='RefID', null=True)),
                ('savetime', models.DateTimeField(blank=True, db_column='SaveTime', null=True, verbose_name='数据保存时间')),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('bettime', models.DateTimeField(blank=True, db_column='BetTime', null=True)),
                ('iswin', models.IntegerField(blank=True, db_column='IsWin', null=True, verbose_name='赢')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='返点金额')),
                ('turnover', models.DecimalField(db_column='Turnover', decimal_places=0, max_digits=18, verbose_name='流水')),
            ],
            options={
                'db_table': 'TB_RgProfitLoss',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbSgaccount',
            fields=[
                ('account', models.ForeignKey(db_column='AccountId', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='maindb.TbAccount', verbose_name='账号')),
                ('username', models.CharField(db_column='UserName', max_length=50, verbose_name='用户名')),
                ('transferin', models.DecimalField(db_column='TransferIn', decimal_places=4, max_digits=18, verbose_name='转入')),
                ('transferout', models.DecimalField(db_column='TransferOut', decimal_places=4, max_digits=18, verbose_name='转出')),
                ('winorloss', models.DecimalField(db_column='WinOrLoss', decimal_places=4, max_digits=18, verbose_name='亏盈')),
                ('bonusrate', models.DecimalField(db_column='BonusRate', decimal_places=4, max_digits=18, verbose_name='返点率')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='总反水')),
                ('availablescores', models.DecimalField(db_column='AvailableScores', decimal_places=4, max_digits=18, verbose_name='余额')),
                ('createtime', models.DateTimeField(db_column='CreateTime', verbose_name='创建时间')),
                ('fundswitch', models.BooleanField(db_column='FundSwitch', verbose_name='资金开关')),
            ],
            options={
                'db_table': 'TB_SgAccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbSgmoneyininfo',
            fields=[
                ('moneyinid', models.AutoField(db_column='MoneyInID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待转入'), (1, '正在转入'), (2, '转入完成'), (3, '转入失败'), (4, '转入失败,已退款')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_SgMoneyInInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbSgmoneyoutinfo',
            fields=[
                ('moneyoutid', models.AutoField(db_column='MoneyOutID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=18, null=True, verbose_name='金额')),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=50, null=True, verbose_name='订单号')),
                ('ordertime', models.DateTimeField(blank=True, db_column='OrderTime', null=True, verbose_name='时间')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('handle', models.CharField(blank=True, db_column='Handle', max_length=50, null=True, verbose_name='操作者')),
                ('handtime', models.DateTimeField(blank=True, db_column='HandTime', null=True, verbose_name='操作时间')),
                ('status', models.IntegerField(blank=True, choices=[(0, '等待处理'), (1, '正在收回'), (2, '收回完成'), (4, '收回失败')], db_column='Status', null=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'TB_SgMoneyOutInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbSgprofitloss',
            fields=[
                ('profitlossid', models.AutoField(db_column='ProfitLossID', primary_key=True, serialize=False, verbose_name='记录ID')),
                ('profitlosstime', models.DateTimeField(blank=True, db_column='ProfitLossTime', null=True, verbose_name='游戏时间')),
                ('profitlosstype', models.CharField(blank=True, db_column='ProfitLossType', max_length=50, null=True)),
                ('profitlossmoney', models.DecimalField(blank=True, db_column='ProfitLossMoney', decimal_places=4, max_digits=18, null=True, verbose_name='投注额')),
                ('winmoney', models.DecimalField(blank=True, db_column='WinMoney', decimal_places=4, max_digits=18, null=True, verbose_name='亏盈')),
                ('prizemoney', models.DecimalField(blank=True, db_column='PrizeMoney', decimal_places=4, max_digits=18, null=True, verbose_name='派奖额')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=500, null=True, verbose_name='描述')),
                ('playid', models.CharField(blank=True, db_column='PlayID', max_length=50, null=True, verbose_name='游戏ID')),
                ('gametype', models.CharField(blank=True, db_column='GameType', max_length=50, null=True, verbose_name='游戏类型')),
                ('refid', models.IntegerField(blank=True, db_column='RefID', null=True)),
                ('savetime', models.DateTimeField(blank=True, db_column='SaveTime', null=True, verbose_name='数据保存时间')),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('bettime', models.DateTimeField(blank=True, db_column='BetTime', null=True)),
                ('iswin', models.IntegerField(blank=True, db_column='IsWin', null=True, verbose_name='赢')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True, verbose_name='用户名')),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18, verbose_name='返点金额')),
                ('turnover', models.DecimalField(db_column='Turnover', decimal_places=0, max_digits=18, verbose_name='流水')),
            ],
            options={
                'db_table': 'TB_SgProfitLoss',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbTeammapping',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sportid', models.IntegerField(db_column='SportID')),
                ('source', models.IntegerField(db_column='Source')),
                ('sourceteamnameen', models.CharField(blank=True, db_column='SourceTeamNameEn', max_length=200, null=True)),
                ('sourceteamnamezh', models.CharField(blank=True, db_column='SourceTeamNameZh', max_length=200, null=True)),
                ('teamnameen', models.CharField(blank=True, db_column='TeamNameEn', max_length=200, null=True)),
                ('teamnamezh', models.CharField(blank=True, db_column='TeamNameZh', max_length=200, null=True)),
                ('teamid', models.IntegerField(blank=True, db_column='TeamID', null=True)),
                ('mappingkey', models.CharField(blank=True, db_column='MappingKey', max_length=500, null=True)),
            ],
            options={
                'db_table': 'TB_TeamMapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbVip',
            fields=[
                ('level', models.IntegerField(db_column='Level', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=300, null=True)),
                ('icon', models.CharField(blank=True, db_column='Icon', max_length=300, null=True)),
                ('points', models.DecimalField(db_column='Points', decimal_places=4, max_digits=18)),
                ('keeppoints', models.DecimalField(db_column='KeepPoints', decimal_places=4, max_digits=18)),
                ('keepdays', models.IntegerField(db_column='KeepDays')),
                ('rankgifts', models.DecimalField(db_column='RankGifts', decimal_places=4, max_digits=18)),
                ('rebate', models.DecimalField(db_column='Rebate', decimal_places=4, max_digits=18)),
                ('game1rebate', models.DecimalField(db_column='Game1Rebate', decimal_places=4, max_digits=18)),
                ('game2rebate', models.DecimalField(db_column='Game2Rebate', decimal_places=4, max_digits=18)),
                ('game3rebate', models.DecimalField(db_column='Game3Rebate', decimal_places=4, max_digits=18)),
                ('rebatemaxamount', models.DecimalField(blank=True, db_column='RebateMaxAmount', decimal_places=4, max_digits=18, null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('enabled', models.BooleanField(db_column='Enabled')),
            ],
            options={
                'db_table': 'TB_Vip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbVipbonus',
            fields=[
                ('tid', models.AutoField(db_column='Tid', primary_key=True, serialize=False)),
                ('amount', models.DecimalField(db_column='Amount', decimal_places=4, max_digits=18, verbose_name='红利金额')),
                ('drawtime', models.DateTimeField(blank=True, db_column='DrawTime', null=True, verbose_name='领取时间')),
                ('createtime', models.DateTimeField(db_column='CreateTime', verbose_name='创建时间')),
                ('arrivetime', models.DateTimeField(blank=True, db_column='ArriveTime', null=True, verbose_name='发放到账时间')),
                ('endtime', models.DateTimeField(blank=True, db_column='EndTime', null=True, verbose_name='领取过期截止时间')),
                ('status', models.IntegerField(choices=[(0, '待领取'), (1, '已领取')], db_column='Status', verbose_name='状态')),
                ('loginfo', models.CharField(blank=True, db_column='LogInfo', max_length=3000, null=True, verbose_name='日志信息')),
                ('memo', models.CharField(blank=True, db_column='Memo', max_length=3000, null=True, verbose_name='备注')),
                ('sourceid', models.BigIntegerField(db_column='SourceId', verbose_name='关联ID')),
            ],
            options={
                'db_table': 'TB_VipBonus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbVipgift',
            fields=[
                ('tid', models.AutoField(db_column='TId', primary_key=True, serialize=False, verbose_name='TID')),
                ('title', models.CharField(blank=True, db_column='Title', max_length=500, null=True, verbose_name='标题')),
                ('content', models.TextField(blank=True, db_column='Content', null=True, verbose_name='内容')),
                ('image', maindb.cus_models_fields.CusPictureField(blank=True, db_column='Image', max_length=200, null=True, verbose_name='APP图片')),
                ('image2', maindb.cus_models_fields.CusPictureField(blank=True, db_column='Image2', max_length=200, null=True, verbose_name='WEB图片')),
                ('enabled', models.BooleanField(db_column='Enabled', verbose_name='启用')),
            ],
            options={
                'db_table': 'TB_VIPGift',
                'managed': False,
            },
        ),
    ]
