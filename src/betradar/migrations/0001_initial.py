# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-23 18:12
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alltournamentsidcn',
            fields=[
                ('serialnumber', models.AutoField(db_column='SerialNumber', primary_key=True, serialize=False)),
                ('sportid', models.IntegerField(db_column='SportId')),
                ('categoryid', models.BigIntegerField(db_column='CategoryId')),
                ('tournamentid', models.IntegerField(db_column='TournamentId')),
                ('uniquetournamentid', models.IntegerField(db_column='UniqueTournamentId')),
                ('sport', models.TextField(db_column='Sport')),
                ('category', models.TextField(db_column='Category')),
                ('tournament', models.TextField(db_column='Tournament')),
                ('uniquetournamentname', models.TextField(db_column='UniqueTournamentName')),
                ('teamid', models.BigIntegerField(db_column='TeamId')),
                ('teamname', models.TextField(db_column='TeamName')),
                ('superteamid', models.BigIntegerField(db_column='SuperTeamId')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'AllTournamentsIDCN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alltournamentsids',
            fields=[
                ('serialnumber', models.AutoField(db_column='SerialNumber', primary_key=True, serialize=False)),
                ('sportid', models.IntegerField(db_column='SportId')),
                ('categoryid', models.BigIntegerField(db_column='CategoryId')),
                ('tournamentid', models.IntegerField(db_column='TournamentId')),
                ('uniquetournamentid', models.IntegerField(db_column='UniqueTournamentId')),
                ('sport', models.TextField(blank=True, db_column='Sport', null=True)),
                ('category', models.TextField(blank=True, db_column='Category', null=True)),
                ('tournament', models.TextField(blank=True, db_column='Tournament', null=True)),
                ('uniquetournamentname', models.TextField(blank=True, db_column='UniqueTournamentName', null=True)),
                ('teamid', models.BigIntegerField(db_column='TeamId')),
                ('teamname', models.TextField(blank=True, db_column='TeamName', null=True)),
                ('superteamid', models.BigIntegerField(db_column='SuperTeamId')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'AllTournamentsIDs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryid', models.IntegerField(db_column='CategoryId', primary_key=True, serialize=False)),
                ('categoryname', models.CharField(db_column='CategoryName', max_length=200)),
                ('sportid', models.IntegerField(db_column='SportId')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Competitors',
            fields=[
                ('competitorsid', models.AutoField(db_column='CompetitorsId', primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(db_column='ID')),
                ('superid', models.BigIntegerField(db_column='SuperID')),
                ('competitorbet', models.CharField(db_column='CompetitorBet', max_length=100)),
                ('competitorzh', models.CharField(db_column='CompetitorZh', max_length=100)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Competitors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LcooOdds',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.IntegerField(db_column='MatchID')),
                ('oddstype', models.IntegerField(db_column='OddsType')),
                ('oddsdata', models.CharField(db_column='OddsData', max_length=8000)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Lcoo_Odds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LcooOddsresult',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('oddsresult', models.CharField(db_column='Oddsresult', max_length=8000)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Lcoo_OddsResult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LcooOnmatch',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('msgnr', models.BigIntegerField(db_column='MsgNr')),
                ('sportid', models.IntegerField(db_column='SportID')),
                ('sportbet', models.CharField(db_column='SportBet', max_length=50)),
                ('tournamentid', models.IntegerField(db_column='TournamentID')),
                ('tournamentbet', models.CharField(db_column='TournamentBet', max_length=50)),
                ('categoryid', models.BigIntegerField(db_column='CategoryID')),
                ('categorybet', models.CharField(db_column='CategoryBet', max_length=50)),
                ('messagetime', models.DateTimeField(db_column='MessageTime')),
                ('matchdate', models.DateTimeField(db_column='MatchDate')),
                ('fixturejs', models.TextField(db_column='FixtureJs')),
                ('oddsjs', models.TextField(db_column='OddsJs')),
                ('tournamentjs', models.TextField(db_column='TournamentJs')),
                ('sportjs', models.TextField(db_column='SportJs')),
                ('entirejs', models.TextField(db_column='EntireJs')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Lcoo_OnMatch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LcooOnoutright',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('sportid', models.IntegerField(db_column='SportID')),
                ('sportbet', models.CharField(db_column='SportBet', max_length=50)),
                ('eventinfobet', models.CharField(db_column='EventInfoBet', max_length=50)),
                ('categoryid', models.BigIntegerField(db_column='CategoryID')),
                ('categorybet', models.CharField(db_column='CategoryBet', max_length=50)),
                ('messagetime', models.DateTimeField(db_column='MessageTime')),
                ('matchdate', models.DateTimeField(db_column='MatchDate')),
                ('fixturejs', models.TextField(db_column='FixtureJs')),
                ('oddsjs', models.TextField(db_column='OddsJs')),
                ('sportjs', models.TextField(db_column='SportJs')),
                ('entirejs', models.TextField(db_column='EntireJs')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Lcoo_OnOutRight',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveoddsBetstatus',
            fields=[
                ('tid', models.AutoField(db_column='Tid', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('betstatus', models.SmallIntegerField(db_column='BetStatus')),
                ('betstopreason', models.CharField(db_column='BetStopReason', max_length=50)),
                ('stopreasonid', models.IntegerField(db_column='StopReasonId')),
                ('stopreason', models.CharField(db_column='StopReason', max_length=50)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('score', models.CharField(max_length=10)),
                ('redcardshome', models.IntegerField()),
                ('redcardsaway', models.IntegerField()),
            ],
            options={
                'db_table': 'LiveOdds_BetStatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Liveoddsdata',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('jsondata', models.TextField(db_column='JsonData')),
                ('codeevent', models.CharField(db_column='CodeEvent', max_length=50)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('msgnr', models.BigIntegerField(db_column='MsgNr')),
                ('replynr', models.BigIntegerField(db_column='ReplyNr')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'LiveOddsData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Livescore',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchId')),
                ('betradarmatchid', models.BigIntegerField(db_column='BetradarMatchId')),
                ('matchdate', models.DateTimeField(db_column='MatchDate')),
                ('sportid', models.IntegerField(db_column='SportId')),
                ('categoryid', models.BigIntegerField(db_column='CategoryId')),
                ('tournamentid', models.IntegerField(db_column='TournamentId')),
                ('team1id', models.BigIntegerField(db_column='Team1Id')),
                ('superteam1id', models.BigIntegerField(db_column='SuperTeam1Id')),
                ('team2id', models.BigIntegerField(db_column='Team2Id')),
                ('superteam2id', models.BigIntegerField(db_column='SuperTeam2Id')),
                ('matchscore', models.CharField(db_column='MatchScore', max_length=8)),
                ('winner', models.IntegerField(db_column='Winner')),
                ('statuscode', models.IntegerField(db_column='StatusCode')),
                ('serializedata', models.TextField(db_column='SerializeData')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('generatedat', models.DateTimeField(db_column='GeneratedAt')),
                ('roundinfo', models.IntegerField(blank=True, db_column='RoundInfo', null=True)),
                ('uniquetournamentid', models.BigIntegerField(db_column='UniqueTournamentId')),
            ],
            options={
                'db_table': 'LiveScore',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LivescoutOddssuggestion',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('description', models.TextField(db_column='Description')),
                ('specialoddsvalue', models.CharField(db_column='SpecialOddsValue', max_length=500)),
                ('subtype', models.IntegerField(db_column='SubType')),
                ('type', models.IntegerField(db_column='Type')),
                ('validdate', models.DateTimeField(db_column='ValidDate')),
                ('oddsvalues', models.TextField(db_column='OddsValues')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'LiveScout_OddsSuggestion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LivescoutOnmatchupdate',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('sportid', models.IntegerField(db_column='SportID')),
                ('sportbet', models.CharField(db_column='SportBet', max_length=50)),
                ('categoryid', models.BigIntegerField(db_column='CategoryID')),
                ('categorybet', models.CharField(db_column='CategoryBet', max_length=50)),
                ('tournamentid', models.IntegerField(db_column='TournamentID')),
                ('tournamentbet', models.CharField(db_column='TournamentBet', max_length=50)),
                ('matchdate', models.DateTimeField(blank=True, db_column='MatchDate', null=True)),
                ('matchheadjs', models.TextField(db_column='MatchHeadJs')),
                ('scouteventjs', models.TextField(db_column='ScoutEventJs')),
                ('matchupdatejs', models.TextField(db_column='MatchUpdateJs')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'LiveScout_OnMatchUpdate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LivescoutOnmatchupdatedelta',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('eventid', models.BigIntegerField(db_column='EventID')),
                ('scouteventjs', models.TextField(db_column='ScoutEventJs')),
                ('matchupdatejs', models.TextField(db_column='MatchUpdateJs')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'LiveScout_OnMatchUpdateDelta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LivescoutOnmatchupdatedeltaupdate',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('eventid', models.BigIntegerField(db_column='EventID')),
                ('scouteventjs', models.TextField(db_column='ScoutEventJs')),
                ('matchupdatejs', models.TextField(db_column='MatchUpdateJs')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'LiveScout_OnMatchUpdateDeltaUpdate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LivescoutOnmatchupdatefull',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchID')),
                ('sportid', models.IntegerField(db_column='SportID')),
                ('sportbet', models.CharField(db_column='SportBet', max_length=50)),
                ('categoryid', models.BigIntegerField(db_column='CategoryID')),
                ('categorybet', models.CharField(db_column='CategoryBet', max_length=50)),
                ('tournamentid', models.IntegerField(db_column='TournamentID')),
                ('tournamentbet', models.CharField(db_column='TournamentBet', max_length=50)),
                ('matchdate', models.DateTimeField(blank=True, db_column='MatchDate', null=True)),
                ('matchheadjs', models.TextField(db_column='MatchHeadJs')),
                ('scouteventjs', models.TextField(db_column='ScoutEventJs')),
                ('matchupdatejs', models.TextField(db_column='MatchUpdateJs')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'LiveScout_OnMatchUpdateFull',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Livescoutsoccerevent',
            fields=[
                ('livescoutsoccereventid', models.AutoField(db_column='LiveScoutSoccerEventId', primary_key=True, serialize=False)),
                ('matchid', models.BigIntegerField(db_column='MatchId')),
                ('eventid', models.BigIntegerField(db_column='EventId')),
                ('typeid', models.IntegerField(db_column='TypeId')),
                ('scoutfeedtype', models.IntegerField(db_column='ScoutFeedType')),
                ('betstatus', models.IntegerField(db_column='BetStatus')),
                ('info', models.TextField(db_column='Info')),
                ('side', models.IntegerField(db_column='Side')),
                ('matchtime', models.CharField(db_column='MatchTime', max_length=24)),
                ('matchscore', models.CharField(db_column='MatchScore', max_length=12)),
                ('servertime', models.DateTimeField(db_column='ServerTime')),
                ('player1', models.BigIntegerField(db_column='Player1')),
                ('player2', models.BigIntegerField(db_column='Player2')),
                ('posx', models.IntegerField(db_column='PosX')),
                ('posy', models.IntegerField(db_column='PosY')),
                ('extrainfo', models.BigIntegerField(db_column='ExtraInfo')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'LiveScoutSoccerEvent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MainOddstypes',
            fields=[
                ('oddstypesid', models.AutoField(db_column='OddsTypesId', primary_key=True, serialize=False)),
                ('sportid', models.IntegerField(db_column='SportID')),
                ('oddsid', models.IntegerField(db_column='OddsID')),
                ('oddskind', models.SmallIntegerField(db_column='OddsKind')),
                ('oddstypegroup', models.SmallIntegerField(db_column='OddsTypeGroup')),
                ('oddstypeid', models.IntegerField(db_column='OddsTypeID')),
                ('subtype', models.IntegerField(blank=True, db_column='Subtype', null=True)),
                ('oddstypename', models.CharField(db_column='OddsTypeName', max_length=50)),
                ('oddstypenamezh', models.CharField(db_column='OddsTypeNameZH', max_length=10)),
                ('oddsoutcome', models.CharField(db_column='OddsOutcome', max_length=20)),
                ('outcome', models.IntegerField(db_column='Outcome')),
                ('outcomedesc', models.CharField(db_column='OutcomeDesc', max_length=200)),
                ('status', models.SmallIntegerField(db_column='Status')),
            ],
            options={
                'db_table': 'Main_OddsTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Oddscomparison',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('bookid', models.CharField(db_column='BookID', max_length=50)),
                ('bookname', models.CharField(db_column='BookName', max_length=50)),
                ('sport', models.CharField(db_column='Sport', max_length=100)),
                ('category', models.CharField(db_column='Category', max_length=100)),
                ('tournamentid', models.CharField(db_column='TournamentID', max_length=50)),
                ('tournamentname', models.CharField(db_column='TournamentName', max_length=100)),
                ('matchid', models.CharField(db_column='MatchID', max_length=50)),
                ('matchdate', models.CharField(db_column='MatchDate', max_length=50)),
                ('hteam', models.CharField(db_column='HTeam', max_length=150)),
                ('ateam', models.CharField(db_column='ATeam', max_length=150)),
                ('oddstype', models.CharField(db_column='OddsType', max_length=50)),
                ('oddscontent', models.CharField(db_column='OddsContent', max_length=500)),
                ('generateat', models.CharField(db_column='GenerateAt', max_length=50)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'OddsComparison',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('playersid', models.AutoField(db_column='PlayersId', primary_key=True, serialize=False)),
                ('id', models.BigIntegerField(db_column='ID')),
                ('superid', models.BigIntegerField(db_column='SuperID')),
                ('international', models.CharField(db_column='International', max_length=100)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Players',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('sportid', models.IntegerField(db_column='SportID', primary_key=True, serialize=False)),
                ('sportname', models.CharField(db_column='SportName', max_length=200)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Sport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbBetstopreason',
            fields=[
                ('reasonid', models.IntegerField(db_column='ReasonID', primary_key=True, serialize=False)),
                ('reason', models.CharField(db_column='Reason', max_length=100)),
                ('dangerousstatus', models.SmallIntegerField(db_column='DangerousStatus')),
            ],
            options={
                'db_table': 'TB_BetStopReason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbStatuscode',
            fields=[
                ('statuscodeid', models.AutoField(db_column='StatusCodeId', primary_key=True, serialize=False)),
                ('sportid', models.SmallIntegerField(db_column='SportID')),
                ('statuscode', models.IntegerField(db_column='StatusCode')),
                ('livestatus', models.SmallIntegerField(db_column='LiveStatus')),
                ('text', models.CharField(db_column='Text', max_length=20)),
            ],
            options={
                'db_table': 'TB_StatusCode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('tournamentid', models.IntegerField(db_column='TournamentID', primary_key=True, serialize=False)),
                ('tournamentname', models.CharField(db_column='TournamentName', max_length=200)),
                ('categoryid', models.IntegerField(db_column='CategoryID')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 'Tournament',
                'managed': False,
            },
        ),
    ]
